Problem Number: 386
Problem Name: Lexicographical Numbers
Link: https://leetcode.com/problems/lexicographical-numbers/

Question
Given an integer n, return all the numbers in the range [1, n] sorted in lexicographical order.
You must write an algorithm that runs in O(n) time and uses O(1) extra space.           


               
Time Complexity: O(N), where N is the number of elements
Space Complexity: O(1)


Solution
class Solution {
    List<Integer> ans = new ArrayList<>();
    
    public List<Integer> lexicalOrder(int n) {
        recursion(0, n);
        
        return ans;
    }
    
    public void recursion(int num, int n) {
        if (num > n) {
            return;
        }
        
        if (num != 0) {
            ans.add(num);
        }
        
        for(int i=0; i<=9; i++) {
            int curr = (10 * num) + i;
            
            if (curr == 0) {
                continue;
            }
            
            if (curr <= n) {
                recursion(curr, n);
            }
            else {
                break;
            }
        }        
    }
}
